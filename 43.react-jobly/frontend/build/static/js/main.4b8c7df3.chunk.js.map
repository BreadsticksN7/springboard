{"version":3,"sources":["api/api.js","companies/CompanyCard.js","Components/FilterForm.js","Components/LoadingSpinner.js","companies/CompanyList.js","auth/UserContext.js","jobs/JobCard.js","jobs/JobCardList.js","companies/CompanyDetail.js","jobs/JobList.js","Components/Alert.js","auth/LoginForm.js","auth/SignUpForm.js","auth/ProfileForm.js","Components/Home.js","Components/Navbar.js","hooks/useLocalStorage.js","App.js","index.js"],"names":["JoblyApi","endpoint","data","method","console","debug","url","process","headers","Authorization","concat","token","params","axios","error","_context","t0","response","message","Array","isArray","handle","this","request","res","company","name","companies","title","jobs","username","user","id","CompanyCard","_ref","desc","logo","react_default","a","createElement","react_router_dom","className","to","src","alt","FilterForm","filterBy","_useState","useState","_useState2","Object","slicedToArray","findName","setFindName","onSubmit","evt","preventDefault","trim","undefined","placeholder","value","onChange","target","type","LoadingSpinner","CompanyList","setCompanies","search","_x","_search","apply","arguments","asyncToGenerator","CompanyList_regeneratorRuntime","mark","_callee","wrap","prev","next","getCompanies","sent","stop","useEffect","Components_FilterForm","length","map","item","companies_CompanyCard","key","description","logoUrl","Components_LoadingSpinner","UserContext","React","createContext","JobCard","salary","equity","companyName","_useContext","useContext","hasAppliedToJob","applyToJob","applied","setApplied","_handleApply","JobCard_regeneratorRuntime","abrupt","digitsRev","salaryStr","toString","i","push","reverse","join","formatSalary","onClick","disabled","JobCardList","job","jobs_JobCard","CompanyDetails","useParams","setCompany","_getCompany","CompanyDetail_regeneratorRuntime","getCompany","jobs_JobCardList","JobList","setJobs","JobList_regeneratorRuntime","getJobs","Alert","_ref$type","_ref$messages","messages","role","LoginForm","login","navigate","useNavigate","password","formData","setFormData","_useState3","_useState4","formErrors","setFormErrors","_handleSubmit","LoginForm_regeneratorRuntime","success","errors","handleChange","_evt$target","objectSpread","defineProperty","required","Components_Alert","SignUpForm","signup","firstName","lastName","email","SignUpForm_regeneratorRuntime","ProfileForm","currentUser","setCurrentUser","_useState5","_useState6","saveConfirm","setSaveConfirm","ProfileForm_regeneratorRuntime","profileData","updateUser","saveProfile","Home","Navbar","logout","first_name","useLocalStorage","firstValue","initialValue","localStorage","getItem","setItem","removeItem","TOKEN_STORAGE_ID","App","_useLocalStorage","_useLocalStorage2","setToken","infoLoaded","setInfoLoaded","Set","applicationIds","setApplicationIds","_login","App_regeneratorRuntime","_callee2","loginData","_token","_context2","e","_x2","_signup","_callee3","signupData","_token2","_context3","has","_getCurrentUser","_jwt$decode","_currentUser","jwt","decode","getCurrentUser","applications","auth_UserContext","Provider","toConsumableArray","Components_Navbar","react_router","path","element","Components_Home","auth_LoginForm","auth_SignUpForm","auth_ProfileForm","companies_CompanyList","CompanyDetail","jobs_JobList","replace","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4b8c7df3.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n    const params = (method === \"get\")\n        ? data\n        : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get details on a company by handle. */\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n  // Find company by name\n  static async getCompanies(name) {\n    let res = await this.request('companies', { name });\n    return res.companies;\n  }\n\n  // Get details on a job by title\n  static async getJobs(title) {\n    let res = await this.request('jobs', { title });\n    return res.jobs;\n  }\n\n  static async login(data) {\n    let res = await this.request(`auth/token`, data, \"post\");\n    return res.token;\n  }\n\n  static async signup(data) {\n    let res = await this.request(`auth/register`, data, \"post\");\n    return res.token;\n  }\n\n  static async getCurrentUser(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n\n  static async saveProfile(username, data) {\n    let res = await this.request(`users/${username}`, data, \"patch\");\n    return res.user;\n  }\n\n  static async applyToJob(username, id) {\n    await this.request(`users/${username}/jobs/${id}`, {}, \"post\");\n  }\n  // obviously, you'll add a lot here ...\n}\n\n// for now, put token (\"testuser\" / \"password\" on class)\n// JoblyApi.token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" +\n//     \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" +\n//     \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\";\n\nexport default JoblyApi;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './CompanyCard.css';\n\n//Display card for companyList\nfunction CompanyCard({handle, name, desc, logo}) {\n  return (\n    <Link className='CompanyCard card' to={`/companies/${handle}`}>\n    <div className='card-body'>\n      <h6 className='card-title'>\n        {name}\n        {logo && <img src={logo} alt={name} className=\"float-right ml-5\" />}\n      </h6>\n      <p><small>{desc}</small></p>\n    </div>\n    </Link>\n  );\n}\n\nexport default CompanyCard;","import React, { useState } from 'react';\nimport './FilterForm.css';\n\n\nfunction FilterForm({filterBy}) {\n  const [findName, setFindName] = useState(\"\");\n\n  //Takes filterBy from 'companyList'\n  //filterBy contents provided by API 'search()'\n  //results are trimmed by the provided parameter\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    filterBy(findName.trim() || undefined);\n    setFindName(findName.trim());\n  }\n\n  const handleChange = evt => {\n    setFindName(evt.target.value);\n  }\n\n  return (\n    <div className='FilterForm mb-4'>\n      <form className='form-inline' onSubmit={handleSubmit}>\n        <input\n          className='form-control form-control-log flex-grow-1'\n          name='search'\n          placeholder='Search...'\n          value={findName}\n          onChange={handleChange}\n        />\n        <button type='submit' className='btn btn-lg btn-primary'>Search</button>\n      </form>\n    </div>\n  );\n}\n\nexport default FilterForm;","import React from \"react\";\nimport \"./LoadingSpinner.css\";\n\n/** Loading message used by components that fetch API data. */\n\nfunction LoadingSpinner() {\n  return (\n      <div className=\"LoadingSpinner\">\n        Loading ...\n      </div>\n  );\n}\n\nexport default LoadingSpinner;","import React, { useState, useEffect } from 'react';\nimport JoblyApi from '../api/api';\nimport CompanyCard from './CompanyCard';\nimport FilterForm from '../Components/FilterForm';\nimport LoadingSpinner from '../Components/LoadingSpinner';\n\nfunction CompanyList() {\n  const [companies, setCompanies] = useState([]);\n\n  //search() is passed instead of API directly so it only\n  //renders when page first loads and when prompted by form submit\n  useEffect(() => {\n    search();\n  }, []);\n  \n  async function search(name) {\n    let res = await JoblyApi.getCompanies(name);\n    setCompanies(res);\n  }\n\n  if(!companies) return <LoadingSpinner />;\n\n  return (\n    <div className='CompanyList col-md-8 offset-md-2'>\n      <FilterForm filterBy={search} />\n        {companies.length\n          ? ( \n            <div className='CompanyList-list'>\n              {companies.map(item => (\n                <CompanyCard\n                  key={item.handle}\n                  handle={item.handle}\n                  name={item.name}\n                  desc={item.description}\n                  logo={item.logoUrl} />\n            ))}\n          </div>\n        ) : (\n          <p className='lead'>No results found</p>\n        )}\n    </div>\n  );\n}\n\nexport default CompanyList;","import React from \"react\";\n\n/** Context: provides currentUser object and setter for it throughout app. */\n\nconst UserContext = React.createContext();\n\nexport default UserContext;\n","import React, { useContext, useEffect, useState } from 'react';\nimport './JobCard.css';\nimport UserContext from '../auth/UserContext';\n\n//function for format salary with commas\nfunction formatSalary(salary) {\n  const digitsRev = [];\n  const salaryStr = salary.toString();\n  \n  for (let i = salaryStr.length - 1; i >= 0; i--) {\n    digitsRev.push(salaryStr[i]);\n    if (i > 0 && i % 3 === 0) digitsRev.push(\",\");\n  }\n  \n  return digitsRev.reverse().join(\"\");\n}\n\n//Display job details for JobCardList\nfunction JobCard({id, title, salary, equity, companyName}) {\n  const { hasAppliedToJob, applyToJob } = useContext(UserContext);\n  const [applied, setApplied] = useState();\n\n  useEffect(function updateAppliedStatus() {\n    setApplied(hasAppliedToJob(id));\n  }, [id, hasAppliedToJob]);\n\n  async function handleApply(evt) {\n    if (hasAppliedToJob(id)) return;\n    applyToJob(id);\n    setApplied(true);\n  }\n\n  return (\n    <div className='JobCard card'> {applied}\n      <div className='card-body'>\n        <h6 className='card-title'>{title}</h6>\n        <p>{companyName}</p>\n        {salary && <div><small>Salary: {formatSalary(salary)}</small></div>}\n        {equity !== undefined && <div><small>Equity: {equity}</small></div>}\n        <button\n          className='btn btn-danger font-weight-bold text-uppercase float-right'\n          onClick={handleApply}\n          disabled={applied}\n          >\n          {applied ? \"Applied\" : \"Apply\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default JobCard;","import React from 'react';\nimport JobCard from './JobCard';\n\n//Displays specific job details\n//Used on JobList / CompanyList\nfunction JobCardList({jobs, apply}) {\n  return (\n    <div>\n      {jobs.map(job => (\n        <JobCard\n          key={job.id}\n          id={job.id}\n          title={job.title}\n          salary={job.salary}\n          equity={job.equity}\n          companyName={job.companyName}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default JobCardList;","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport JoblyApi from '../api/api';\nimport JobCardList from '../jobs/JobCardList';\nimport LoadingSpinner from '../Components/LoadingSpinner';\n\n\n//Displays specific company details and job postings\nfunction CompanyDetails() {\n  const { handle } = useParams();\n  const [company, setCompany] = useState(null);\n  \n  useEffect(() => {\n    async function getCompany() {\n      let res = await JoblyApi.getCompany(handle);\n      setCompany(res);\n    }\n    getCompany();\n  }, [handle]);\n\n  if(!company) return <LoadingSpinner />;\n\n  return (\n    <div className='CompanyDetail col-md-8 offset-md-2'>\n      <h2>{company.name}</h2>\n      <p>{company.description}</p>\n      <JobCardList jobs={company.jobs} />\n    </div>\n  );\n}\n\nexport default CompanyDetails;","import React, { useState, useEffect } from 'react';\nimport JoblyApi from '../api/api';\nimport FilterForm from '../Components/FilterForm';\nimport JobCardList from './JobCardList';\nimport LoadingSpinner from '../Components/LoadingSpinner';\n\nfunction JobList() {\n  const [jobs, setJobs] = useState([]);\n\n  //search() is passed instead of API direclty so it\n  //only renders on first page load and form prompt\n  useEffect(() => {\n    search();\n  }, []);\n\n  async function search(title) {\n    let res = await JoblyApi.getJobs(title);\n    setJobs(res);\n  }\n\n  if (!jobs) return <LoadingSpinner />\n\n  return (\n    <div>\n      <FilterForm filterBy={search} />\n        {jobs.length\n          ? <JobCardList jobs={jobs} />\n          : <p>Sorry, no results found</p>\n        }\n    </div>\n  );\n}\n\nexport default JobList;","import React from \"react\";\n\n/** Presentational component for showing bootstrap-style alerts.\n *\n * { LoginForm, SignupForm, ProfileForm } -> Alert\n **/\n\nfunction Alert({ type = \"danger\", messages = [] }) {\n  console.debug(\"Alert\", \"type=\", type, \"messages=\", messages);\n\n  return (\n      <div className={`alert alert-${type}`} role=\"alert\">\n        {messages.map(error => (\n            <p className=\"mb-0 small\" key={error}>\n              {error}\n            </p>\n        ))}\n      </div>\n  );\n}\n\nexport default Alert;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Alert from '../Components/Alert';\n\nfunction LoginForm({login}) {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    let res = await login(formData);\n    if(res.success) {\n      navigate(\"/companies\");\n    } else {\n      setFormErrors(res.errors);\n    }\n  }\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    setFormData(formData => ({...formData, [name]: value }));\n  }\n  \n  return (\n    <div className='LoginForm'>\n      <div className='container col-md-6 offset-md-3 col-lg-4 offset-lg-4'>\n        <h3 className='mb-3'>Log In</h3>\n        <div className='card'>\n          <div className='card-body'>\n            <form onSubmit={handleSubmit}>\n              <div className='form-group'>\n                <label>Username</label>\n                <input\n                  name=\"username\"\n                  className='form-control'\n                  value={formData.username}\n                  onChange={handleChange}\n                  required\n                />\n              </div>\n              <div className='form-group'>\n                <label>Password</label>\n                <input\n                  type='password'\n                  name='password'\n                  className='form-control'\n                  value={formData.password}\n                  onChange={handleChange}\n                  required\n                />\n              </div>\n\n              {formErrors.length\n                ? <Alert type=\"danger\" messages={formErrors} />\n                : null }\n\n              <button\n                className='btn btn-primary float-right' >Submit</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginForm;","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Alert from '../Components/Alert';\n\nfunction SignUpForm({ signup }) {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\"\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    let res = await signup(formData);\n    if (res.success) {\n      navigate(\"/companies\");\n    } else {\n      setFormErrors(res.errors);\n    }\n  }\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    setFormData(formData => ({...formData, [name]: value }));\n  }\n\n  return (\n    <div className='SignUpForm'>\n      <div className='container col-md-6 offset-md-3 col-lg-4 offset-lg-4'>\n        <h2 className='mb-3'>Sign Up</h2>\n        <div className='card'>\n            <div className='card-body'>\n              <form onSubmit={handleSubmit}>\n                <div className='form-group'>\n                  <label>Username</label>\n                  <input\n                    name=\"username\"\n                    className=\"form-control\"\n                    value={formData.username}\n                    onChange={handleChange}\n                  />\n                </div>\n                <div className='form-group'>\n                  <label>Password</label>\n                  <input\n                    name=\"password\"\n                    className=\"form-control\"\n                    value={formData.password}\n                    onChange={handleChange}\n                  />\n                </div>\n                <div className='form-group'>\n                  <label>First Name</label>\n                  <input\n                    name=\"firstName\"\n                    className=\"form-control\"\n                    value={formData.firstName}\n                    onChange={handleChange}\n                  />\n                </div><div className='form-group'>\n                  <label>Last Name</label>\n                  <input\n                    name=\"lastName\"\n                    className=\"form-control\"\n                    value={formData.lastName}\n                    onChange={handleChange}\n                  />\n                </div><div className='form-group'>\n                  <label>Email</label>\n                  <input\n                    name=\"email\"\n                    className=\"form-control\"\n                    value={formData.email}\n                    onChange={handleChange}\n                  />\n                </div>\n\n                {formErrors.length\n                 ? <Alert type=\"danger\" messages={formErrors}/>\n                 : null \n                }\n\n                <button\n                  type=\"submit\"\n                  className='btn btn-primary float-right'\n                  >Submit</button>\n              </form>\n            </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUpForm;","import React, { useState, useContext } from 'react';\nimport JoblyApi from '../api/api';\nimport UserContext from './UserContext';\nimport Alert from '../Components/Alert';\n\n//User profile form\n//Allows changing first/last name, email and password\nfunction ProfileForm() {\n  const { currentUser, setCurrentUser } = useContext(UserContext);\n  const [formData, setFormData] = useState({\n    firstName: currentUser.firstName,\n    lastName: currentUser.lastName,\n    email: currentUser.email,\n    username: currentUser.username,\n    password: \"\",\n  });\n  \n  const [formErrors, setFormErrors] = useState([]);\n  const [saveConfirm, setSaveConfirm] = useState(false);\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    let profileData = {\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      password: formData.password\n    };\n    let username = formData.username;\n    let updateUser;\n\n    try {\n      updateUser = await JoblyApi.saveProfile(username, profileData);\n    } catch (e) {\n      setFormErrors(e);\n      return;\n    }\n    setFormData(formData => ({...formData, password: \"\"}));\n    setFormErrors([]);\n    setSaveConfirm(true);\n    setCurrentUser(updateUser);\n  }\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    setFormData(formData => ({\n      ...formData,\n      [name]: value,\n    }));\n    setFormErrors([]);\n  }\n\n  return (\n    <div className='col-md-6 col-lg-4 offset-md-3 offset-lg-4'>\n      <h3>User Profile</h3>\n      <div className='card'>\n        <div className='card-body'>\n          <form onSubmit={handleSubmit}>\n            <div className='form-group'>\n              <label>Username</label>\n              <p className='form-control-plaintext'>{formData.username}</p>\n            </div>\n            <div className='form-group'>\n              <label>First Name</label>\n              <input \n                name=\"firstName\"\n                className='form-control'\n                value={formData.firstName}\n                onChange={handleChange}\n              />\n            </div>\n            <div className='form-group'>\n              <label>Last Name</label>\n              <input \n                name=\"lastName\"\n                className='form-control'\n                value={formData.lastName}\n                onChange={handleChange}\n              />\n            </div>\n            <div className='form-group'>\n              <label>Email</label>\n              <input \n                name=\"email\"\n                className='form-control'\n                value={formData.email}\n                onChange={handleChange}\n              />\n            </div>\n            <div className='form-group'>\n              <label>Confirm password to make changes:</label>\n              <input \n                type=\"password\"\n                name=\"password\"\n                className='form-control'\n                value={formData.password}\n                onChange={handleChange}\n              />\n            </div>\n\n            {formErrors.length\n             ? <Alert type=\"danger\" messages={formErrors} />\n             : null}\n            {saveConfirm\n             ? <Alert type=\"success\" messages={[\"Updated!\"]} />\n             : null}\n            <button className='btn btn-primary btn-block mt-4'>Save Changes</button>\n          </form>\n        </div>\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default ProfileForm;","import React, { useContext} from 'react';\nimport './Home.css';\nimport UserContext from '../auth/UserContext';\nimport { NavLink } from 'react-router-dom'\n\nfunction Home() {\n  const { currentUser } = useContext(UserContext);\n  return (\n    <div className='Home'>\n      <div className='container text-center'>\n        {currentUser\n         ? <h3>\n            Welcome back, {currentUser.firstName || currentUser.username}!\n           </h3>\n         : (\n          <p>\n            <NavLink className='btn btn-primary font-weight-bold mr-3' to=\"/login\">Log In</NavLink>\n            <NavLink className='btn btn-primary font-weight-bold' to=\"/signup\">Sign Up</NavLink>\n          </p>\n         )}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport UserContext from '../auth/UserContext';\n\nimport './Navbar.css';\n\nfunction Navbar({ logout }) {\n  const { currentUser } = useContext(UserContext);\n\n  function logInNav() {\n    return (\n      <ul className='navbar-nav ml-auto'>\n        <li className='nav-item mr-4'>\n          <NavLink className='nav-link' to='/companies'>Companies</NavLink>\n        </li>\n        <li className='nav-item mr-4'>\n          <NavLink className='nav-link' to='/jobs'>Jobs</NavLink>\n        </li>\n        <li className='nav-item mr-4'>\n          <NavLink className='nav-link' to='/profile'>Profile</NavLink>\n        </li>\n        <li className='nav-item mr-4'>\n          <NavLink className='nav-link' to='/' onClick={logout}>Log out {currentUser.first_name || currentUser.username}</NavLink>\n        </li>\n      </ul>\n    );\n  }\n\n  function logOutNav() {\n    return (\n      <ul className='navbar-nav ml-auto'>\n        <li className='nav-item mr-4'>\n          <NavLink className='nav-link' to='/signup'>Sign Up</NavLink>\n        </li>\n        <li className='nav-item mr-4'>\n          <NavLink className='nav-link' to='/login'>Log In</NavLink>\n        </li>\n      </ul>\n    );\n  }\n\n  return (\n    <nav className='Navbar navar navbar-expand-md'>\n      <NavLink className='navbar-brand' to='/'>\n        Jobly\n      </NavLink>\n      {currentUser ? logInNav() : logOutNav()}\n    </nav>\n  );\n}\n\nexport default Navbar;","import { useState, useEffect } from \"react\";\n\n/** Custom hook for keeping state data synced with localStorage.\n *\n * This creates `item` as state and look in localStorage for current value\n * (if not found, defaults to `firstValue`)\n *\n * When `item` changes, effect re-runs:\n * - if new state is null, removes from localStorage\n * - else, updates localStorage\n *\n * To the component, this just acts like state that is also synced to/from\n * localStorage::\n *\n *   const [myThing, setMyThing] = useLocalStorage(\"myThing\")\n */\n\nfunction useLocalStorage(key, firstValue = null) {\n  const initialValue = localStorage.getItem(key) || firstValue;\n\n  const [item, setItem] = useState(initialValue);\n\n  useEffect(function setKeyInLocalStorage() {\n    console.debug(\"hooks useLocalStorage useEffect\", \"item=\", item);\n\n    if (item === null) {\n      localStorage.removeItem(key);\n    } else {\n      localStorage.setItem(key, item);\n    }\n  }, [key, item]);\n\n  return [item, setItem];\n}\n\nexport default useLocalStorage;\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Navigate, Routes, Route, BrowserRouter } from 'react-router-dom';\nimport jwt from 'jsonwebtoken';\n\n//API component\nimport JoblyApi from './api/api';\n//Company components\nimport CompanyList from './companies/CompanyList';\nimport CompanyDetails from './companies/CompanyDetail';\n//Job Components\nimport JobList from './jobs/JobList';\n//Auth Components\nimport LoginForm from './auth/LoginForm';\nimport SignUpForm from './auth/SignUpForm';\nimport ProfileForm from './auth/ProfileForm';\nimport UserContext from './auth/UserContext';\n//Common components\nimport Home from './Components/Home';\nimport Navbar from './Components/Navbar';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport LoadingSpinner from './Components/LoadingSpinner';\n\n//Key name for jwt token in local storage\nexport const TOKEN_STORAGE_ID = 'jobly-token';\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n  const [infoLoaded, setInfoLoaded] = useState(false);\n  const [applicationIds, setApplicationIds] = useState(new Set([]));\n\n  //Checks for token and loads current user info when logging-in\n  useEffect(() => {\n    async function getCurrentUser() {\n      if (token) {\n        try {\n          let { username } = jwt.decode(token);\n          JoblyApi.token = token;\n          let currentUser = await JoblyApi.getCurrentUser(username);\n          setCurrentUser(currentUser);\n          setApplicationIds(new Set(currentUser.applications));\n        } catch (e) {\n          setCurrentUser(null);\n        }\n      }\n      setInfoLoaded(true);\n    }\n    setInfoLoaded(false);\n    getCurrentUser();\n  }, [token]);\n\n  //Login process\n  async function login(loginData) {\n    try {\n      let token = await JoblyApi.login(loginData);\n      setToken(token);\n      return { success: true};\n    } catch (e) {\n      console.error('login failed', e);\n      return { success: false, e };\n    }\n  }\n  \n  //Logout and removes states\n  function logout() {\n    setCurrentUser(null);\n    setToken(null);\n  }\n\n  //User account creation and token\n  async function signup(signupData) {\n    try {\n      let token = await JoblyApi.signup(signupData);\n      setToken(token);\n      return { success: true };\n    } catch (e) {\n      return { success: false, e };\n    }\n  }\n  \n  function hasAppliedToJob(id) {\n    return applicationIds.has(id);\n  }\n\n  function applyToJob(id) {\n    if (hasAppliedToJob(id)) return;\n    JoblyApi.applyToJob(currentUser.username, id);\n    setApplicationIds(new Set([...applicationIds, id]));\n  }\n\n  if (!infoLoaded) return <LoadingSpinner />;\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <UserContext.Provider value={{ currentUser, setCurrentUser, hasAppliedToJob, applyToJob }}>\n      <Navbar login={login} logout={logout} signup={signup} />\n      <Routes>\n        <Route path=\"/\" element={<Home login={login} signup={signup} />} />\n        <Route path=\"/login\" element={<LoginForm login={login} />} />\n        <Route path=\"/signup\" element={<SignUpForm signup={signup} />} />\n        <Route path=\"/profile\" element={<ProfileForm />} />\n        <Route path=\"/companies\" element={<CompanyList />} />\n        <Route path=\"/companies/:handle\" element={<CompanyDetails />} />\n        <Route path=\"/jobs\" element={<JobList />} />\n        \n        {/* Invalid paths will redirect to home */}\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n      </Routes>\n      </UserContext.Provider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}